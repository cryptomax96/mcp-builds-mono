# Development Environment Variables
# Copy this file to .env and fill in your values
# NEVER commit .env to version control!

# ============================================================================
# GITHUB INTEGRATION
# ============================================================================
# Personal Access Token for GitHub API
# Create at: https://github.com/settings/tokens
# Required scopes: repo, workflow
GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Your GitHub username
GITHUB_USERNAME=your-username

# Default repository for operations (optional)
GITHUB_DEFAULT_REPO=your-username/mcp-builds-mono

# ============================================================================
# API KEYS (Development Only - Use OS Keychain in Production)
# ============================================================================
# OpenAI API Key (if using AI features)
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Anthropic API Key (if using Claude API)
ANTHROPIC_API_KEY=sk-ant-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Other service API keys
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxxx/xxxx/xxxx
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/xxxx/xxxx

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================
# Node environment
NODE_ENV=development

# Python environment
PYTHON_ENV=development

# Log level (debug, info, warning, error)
LOG_LEVEL=debug

# Debug output
DEBUG=mcp:*

# Colored output
FORCE_COLOR=1

# ============================================================================
# EXTENSION CONFIGURATION
# ============================================================================
# Allowed directories for file operations (comma-separated)
ALLOWED_DIRS=~/Documents,~/Projects,~/Desktop,~/Downloads

# Rate limiting (requests per minute)
RATE_LIMIT=60

# Maximum file size in bytes (100MB)
MAX_FILE_SIZE=104857600

# Maximum memory usage in MB
MAX_MEMORY_MB=512

# Maximum CPU percentage
MAX_CPU_PERCENT=25

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Maximum concurrent operations
MAX_CONCURRENT_OPS=5

# ============================================================================
# SECURITY SETTINGS
# ============================================================================
# Enable sandboxing
SANDBOX_ENABLED=true

# Enable network access
NETWORK_ENABLED=false

# Enable telemetry (always false for development)
TELEMETRY_ENABLED=false

# Enable audit logging
AUDIT_LOGGING=true

# Audit log path
AUDIT_LOG_PATH=./logs/audit.log

# ============================================================================
# TESTING CONFIGURATION
# ============================================================================
# Test environment
TEST_ENV=test

# Test timeout in milliseconds
TEST_TIMEOUT=10000

# Enable coverage reporting
COVERAGE_ENABLED=true

# Coverage output directory
COVERAGE_DIR=./coverage

# ============================================================================
# CI/CD SETTINGS
# ============================================================================
# CI environment (github, gitlab, jenkins, local)
CI_ENVIRONMENT=local

# Build number
BUILD_NUMBER=local

# Deployment environment (development, staging, production)
DEPLOY_ENV=development

# ============================================================================
# DATABASE (If needed for extensions)
# ============================================================================
# Database URL
DATABASE_URL=sqlite:///./test.db

# Redis URL (for caching/rate limiting)
REDIS_URL=redis://localhost:6379

# ============================================================================
# FEATURE FLAGS
# ============================================================================
# Enable experimental features
ENABLE_EXPERIMENTAL=false

# Enable beta features
ENABLE_BETA=false

# Enable GitHub integration
ENABLE_GITHUB=true

# Enable code analysis
ENABLE_CODE_ANALYSIS=true

# Enable report generation
ENABLE_REPORTS=false

# ============================================================================
# PATHS
# ============================================================================
# Extensions directory
EXTENSIONS_DIR=./extensions

# Tooling directory
TOOLING_DIR=./tooling

# Temporary directory
TEMP_DIR=./tmp

# Cache directory
CACHE_DIR=./.cache

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================
# Package registry (npm, pypi)
PACKAGE_REGISTRY=https://registry.npmjs.org

# Python package index
PYTHON_INDEX=https://pypi.org/simple

# Docker registry
DOCKER_REGISTRY=docker.io

# ============================================================================
# MONITORING
# ============================================================================
# Metrics endpoint
METRICS_ENDPOINT=http://localhost:9090/metrics

# Health check endpoint
HEALTH_ENDPOINT=http://localhost:8080/health

# Tracing enabled
TRACING_ENABLED=false

# Tracing endpoint
TRACING_ENDPOINT=http://localhost:14268/api/traces

# ============================================================================
# DEVELOPMENT TOOLS
# ============================================================================
# Hot reload
HOT_RELOAD=true

# Source maps
SOURCE_MAPS=true

# Watch mode
WATCH_MODE=true

# Pretty print JSON
PRETTY_PRINT=true

# ============================================================================
# NOTES
# ============================================================================
# 1. Copy this file to .env before using
# 2. Never commit .env to version control
# 3. Use different values for production
# 4. Store secrets in OS keychain for production
# 5. Rotate keys regularly
# 6. Use least privilege principle for API keys
